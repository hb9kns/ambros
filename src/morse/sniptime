#!/bin/sh
# sniptime:
# cut input text to given duration,
# or calculate total duration (if duration is missing or 0)
#
# args: speed/WpM, [duration/sec]
# stdin: standardized text
# stdout: duration/sec | cut text

# Morse character table, generated by chargen.sh
chartab=`dirname $0`/chartab.txt
# speedbase: VVVVV=64, CODEX=60, PARIS=50
speedbase=50

# calculate duration/ditunits of characters 
# (one character per argument)
wordduration() {
local wd cd
wd=0
# loop through characters
while test "$1" != ""
do
# search character in chartab, remove first and third column
 cd=`grep -F "_$1" $chartab`
 cd=${cd#* }
 cd=${cd% *}
# echo : $1 : cd=$cd >&2
# empty if not found, then set duration 0
 cd=${cd:-0}
# and add to word total
 wd=`expr $wd + $cd`
 shift
done
#echo : $1 : wd=$wd >&2
echo $wd
}

if test X$1 = X
then echo "$0 : missing speed/WpM" >&2
 exit 2
fi

# speed in dit units per minute
ditspeed=`expr $speedbase '*' $1`
#echo : ditspeed $ditspeed
# set duration to 0 if empty, i.e calculate duration
duration=${2:-0}
#echo : $duration sec
# convert from seconds into ditunits
duration=`expr $duration '*' $ditspeed / 60`
#echo : $duration ditunits

# separate words into lines, then characters by space, and remove empty lines
sed -e 's/[	_ ][	_ ]*/\
/g;s/\(.\)/ \1/g;/^[	_ ]*$/d' | {
 total=0
 while read word
# calculate duration of word including inter-word pause (_)
 do total="$total + `wordduration $word _`"
#  echo :: total = $total >&2
  total=`expr $total`
# duration>0, then echo input text until duration reached
  if test $duration -gt 0
  then if test $duration -lt $total
   then break
# again remove separating spaces from word
   else echo "$word" | sed -e 's/ //g'
   fi
  fi
#  echo :$word: >&2
 done
# duration<=0, then report duration
 if test $duration -le 0
# convert from ditunits back into seconds
 then expr $total '*' 60 / $ditspeed
 fi
}
