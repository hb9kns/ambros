#!/bin/sh
# ambros:
# control script for one channel

if test "$1" = ""
then cat <<EOT
usage: $0 <configfile>

start AMBROS control instance configured by <configfile>
EOT
exit 1
fi

# save directories of scripts and instance ("root", configuration file)
# is somewhat complicated to correctly handle relative paths
# (not using $OLDPWD etc to keep better portability)
owd=`pwd`
cd `dirname $0`
SCRIPTDIR=`pwd`
echo SCRIPTDIR: $SCRIPTDIR
cd "$owd"
cd `dirname $1`
ROOTDIR=`pwd`
echo ROOTDIR: $ROOTDIR
AMBROSCONFIG=`basename $1`

cd $SCRIPTDIR || { echo "cannot access scripts in $SCRIPTDIR" ; exit 3 ; }
# read global settings
. ./constants.sh
# (re)generate morse code table
cd morse && ./chargen.sh

if test ! -d "$ROOTDIR" -o ! -x "$ROOTDIR" -o ! -r "$ROOTDIR" -o ! -w "$ROOTDIR"
then echo "base directory ($ROOTDIR) is not usable, aborting!"
exit 2
fi

echo

# get channel list
cd "$ROOTDIR"
echo working in channel $ROOTDIR
lchannels=`configread $AMBROSCONFIG channels ,`
echo listed channels: $lchannels
unset channels
for ch in $lchannels
do
if test -d $ch -a -x $ch -a -r $ch -a -w $ch
then channels="$ch $channels"
else echo "channel $ch is not read/write/accessible directory, ignoring!"
fi
done

echo

GLOBALSPEED=`configread $AMBROSCONFIG WPM`
GLOBALSPEED=${GLOBALSPEED:-12}
echo global speed $GLOBALSPEED Words/min

cd "$ROOTDIR"
if test ! -d "$SOURCEDIR" -o ! -x "$SOURCEDIR" -o ! -r "$SOURCEDIR" -o ! -w "$SOURCEDIR"
then echo "source directory ($ROOTDIR/$SOURCEDIR) is unusable, aborting!"
exit 2
fi

# handler for aborting
finish () {
 echo
 echo received abort signal: stopping all subprocesses
# if no PID is set, use 1 (init) as a dummy argument
 /bin/kill -TERM ${pidassembler:-1} $pidchannelchief
 echo and ending main control loop
 date +"at %c"
 AMBROSABORT=1
}
AMBROSABORT=0
 
trap finish INT TERM STOP

echo

echo entering main control loop with PID $$
date +"at %c"

while test $AMBROSABORT -eq 0
do : # main control loop

# poll&process sources with `extractor`
# start&control `assembler`
# start&control `channelchief`

done

echo
echo finished.

